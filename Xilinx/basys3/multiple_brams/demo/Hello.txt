Writing hello world from board.

In this example we are using a Digilent Basys 3 board. 

We use litex as our SoC generator to genrate an SoC. Our SoC consists of a soft CPU, UART, Timer and an integrated main ram to load the memory initialization files.

Commad for generating the SoC.

./digilent_basys3.py --integrated-main-ram-size=0x10000 --cpu-type=vexriscv 

This generates an SoC around the Vexriscv core with an integrated ram of size 0x10000.

Once we have the SoC we need to initialize it with the hello world program. We write a C program for hello world using the demo heirachy as available in Litex repo.

static void hello_world(void)
{
		uart_rxtx_write(' ');
		uart_rxtx_write('H');
		uart_rxtx_write('e');
		uart_rxtx_write('l');
		uart_rxtx_write('l');
		uart_rxtx_write('o');
		uart_rxtx_write('_');
		uart_rxtx_write('w');
		uart_rxtx_write('o');
		uart_rxtx_write('r');
		uart_rxtx_write('l');
		uart_rxtx_write('d');
		uart_rxtx_write(' ');
}

We use the hello_world function to print hello world. The function uses the function generated by litex uart_rxtx_write which writes to the UART and we read it through the FTDI USB to Serial bridge present on the board.

Once the program is ready we generate the binary file for initializing the ram. 

python3 ./demo/demo.py --build-path=build/digilent_basys3

Inorder to load the demo.bin file on the board we use the following command.


./../litex_dev/litex-boards/litex_boards/targets/digilent_basys3.py --integrated-main-ram-size=0x10000 --cpu-type=vexriscv --build --load --no-compile-software --integrated-rom-init=demo.bin --uart-name=serial


This command invokes Vivado to implement the design and generate and load the bitstrem onto the board.

Once the design is burnt onto the board we use litex_term to view the serial data coming from the ftdi bridge to the USB communication port using the following command.

litex_term /dev/ttyUSB1 --speed=115200

/dev/ttyUSB1 is the comm port connected to the FTDI bridge, 115200 is the baudrate for UART.


---------------------------------------------------------------------------------------------------


AXI_GPIO

Integration of AXI_GPIO onto Vexriscv 